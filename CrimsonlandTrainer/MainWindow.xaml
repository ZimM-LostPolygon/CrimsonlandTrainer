<Window x:Class="CrimsonlandTrainer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CrimsonlandTrainer"
        mc:Ignorable="d"
        xmlns:trainer="clr-namespace:CrimsonlandTrainer"
        xmlns:game="clr-namespace:CrimsonlandTrainer.Game"
        xmlns:dd="urn:gong-wpf-dragdrop"
        Title="Crimsonland Dream Build Trainer"
        Height="619.568"
        Width="960.509"
        ResizeMode="CanResize"
        Loaded="MainWindow_OnLoaded" Closed="MainWindow_OnClosed">
    <Window.DataContext>
        <trainer:TrainerViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="15,15,15,40">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Button Grid.Column="0" Content="Launch Game"
                            Command="{Binding StartGameCommand}"
                            IsEnabled="{Binding IsStartGameButtonEnabled}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Width="115" Height="30" Margin="0,0,10,0" />
                    <Button Grid.Column="0" Content="Reset State"
                            Command="{Binding ResetBuildStateCommand}"
                            HorizontalAlignment="Left" VerticalAlignment="Top" Width="115" Height="30" />
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top"
                            HorizontalAlignment="Right">
                    <Button Content="Load Build"
                            Command="{Binding LoadBuildCommand}"
                            Width="100" Height="30" Margin="10,0,0,0" />
                    <Button Content="Save Build"
                            Command="{Binding SaveBuildCommand}"
                            Width="100" Height="30" Margin="10,0,0,0" />
                </StackPanel>
            </Grid>

            <GroupBox
                Grid.Row="1"
                IsEnabled="{Binding IsLoadedBuildGroupBoxEnabled}"
                Header="Loaded Build" Grid.ColumnSpan="2" Margin="0,10,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" MinWidth="100" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="1*" MinWidth="100" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <GridSplitter Grid.Column="1" Grid.Row="1" Grid.RowSpan="1" HorizontalAlignment="Stretch" />

                    <Label Grid.Column="0" Grid.Row="0" Content="Perks" HorizontalAlignment="Left"
                           VerticalAlignment="Center" />
                    <DockPanel Grid.Column="0" Grid.Row="1">
                        <ListBox
                            x:Name="PerksListBox"
                            ItemsSource="{Binding Perks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            DisplayMemberPath="PerkAsString"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True">
                            <ListBox.InputBindings>
                                <KeyBinding Key="Delete"
                                            Command="{Binding DeletePerkFromBuildCommand}"
                                            CommandParameter="{Binding SelectedIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                            </ListBox.InputBindings>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}" />
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Delete"
                                                          Command="{Binding DataContext.DeletePerkFromBuildCommand}"
                                                          CommandParameter="{Binding SelectedIndex}"
                                                />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ToolTip" Value="{Binding Error}"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                            <Setter Property="Foreground" Value="Red" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Path=IsNext}" Value="True">
                                            <Setter Property="Background" Value="GreenYellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </DockPanel>

                    <Grid Grid.Column="0" Grid.Row="2" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="100" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>

                        <ComboBox x:Name="PerkToAddComboBox"
                                  Grid.Column="0"
                                  ItemsSource="{Binding Source={local:EnumBindingSource {x:Type game:Perk}}}"
                                  Margin="0,10,5,0" SelectedIndex="0" />

                        <Button
                            Grid.Column="1"
                            Content="Add"
                            Command="{Binding AddPerkToBuildCommand}"
                            CommandParameter="{Binding ElementName=PerkToAddComboBox,Path=SelectedItem}"
                            Margin="0,10,0,0" />
                    </Grid>

                    <Label Grid.Column="2" Grid.Row="0" Content="Weapons" HorizontalAlignment="Left"
                           VerticalAlignment="Center" />
                    <DockPanel Grid.Column="2" Grid.Row="1">
                        <ListBox
                            x:Name="WeaponsListBox"
                            ItemsSource="{Binding Weapons, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            DisplayMemberPath="WeaponAsString"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True">
                            <ListBox.InputBindings>
                                <KeyBinding Key="Delete"
                                            Command="{Binding DeleteWeaponFromBuildCommand}"
                                            CommandParameter="{Binding SelectedIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                            </ListBox.InputBindings>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}">
                                    </Setter>
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                <MenuItem Header="Delete"
                                                          Command="{Binding DataContext.DeleteWeaponFromBuildCommand}"
                                                          CommandParameter="{Binding SelectedIndex}"
                                                />
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsNext}" Value="True">
                                            <Setter Property="Background" Value="GreenYellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </DockPanel>

                    <Grid Grid.Column="2" Grid.Row="2" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="100" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>

                        <ComboBox x:Name="WeaponToAddComboBox"
                                  Grid.Column="0"
                                  ItemsSource="{Binding Source={local:EnumBindingSource {x:Type game:Weapon}}}"
                                  Margin="0,10,5,0" SelectedIndex="0" />

                        <Button
                            Grid.Column="1"
                            Content="Add"
                            Command="{Binding AddWeaponToBuildCommand}"
                            CommandParameter="{Binding ElementName=WeaponToAddComboBox,Path=SelectedItem}"
                            Margin="0,10,0,0" />
                    </Grid>

                    <Label Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="3" Content="Options"
                           HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0" />
                    <DockPanel Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="3">
                        <StackPanel Margin="5,0,0,0">
                            <CheckBox Content="Replace Fire Bullets with 500 Points"
                                      IsChecked="{Binding ReplaceFireBulletsWith500Points, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <CheckBox Content="Replace Plasma Overload with 500 Points"
                                      IsChecked="{Binding ReplacePlasmaOverloadWith500Points, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </StackPanel>
                    </DockPanel>
                </Grid>
            </GroupBox>
        </Grid>

        <Grid Grid.Column="1" Margin="15,15,15,40" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Content="DbgEng Output" Margin="0,-10,0,0"/>
            <TextBox Grid.Row="1" TextWrapping="WrapWithOverflow" IsReadOnly="True"
                     Text="{Binding DebugEngineOutput, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" TextChanged="TextBox_TextChanged"></TextBox>
        </Grid>

        <StatusBar Grid.Column="0" Grid.ColumnSpan="2" Height="25" VerticalAlignment="Bottom" Margin="0">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}" Margin="5,0,0,0" />
            </StatusBarItem>

        </StatusBar>
    </Grid>
</Window>